/* This file was generated by upbc (the upb compiler) from the input
 * file:
 *
 *     envoy/data/tap/v2alpha/common.proto
 *
 * Do not edit -- your changes will be discarded when the file is
 * regenerated. */

#ifndef ENVOY_DATA_TAP_V2ALPHA_COMMON_PROTO_UPB_H_
#define ENVOY_DATA_TAP_V2ALPHA_COMMON_PROTO_UPB_H_

#include "upb/msg_internal.h"
#include "upb/decode.h"
#include "upb/decode_fast.h"
#include "upb/encode.h"

#include "upb/port_def.inc"

#ifdef __cplusplus
extern "C" {
#endif

struct envoy_data_tap_v2alpha_Body;
typedef struct envoy_data_tap_v2alpha_Body envoy_data_tap_v2alpha_Body;
extern const upb_msglayout envoy_data_tap_v2alpha_Body_msginit;


/* envoy.data.tap.v2alpha.Body */

UPB_INLINE envoy_data_tap_v2alpha_Body *envoy_data_tap_v2alpha_Body_new(upb_arena *arena) {
  return (envoy_data_tap_v2alpha_Body *)_upb_msg_new(&envoy_data_tap_v2alpha_Body_msginit, arena);
}
UPB_INLINE envoy_data_tap_v2alpha_Body *envoy_data_tap_v2alpha_Body_parse(const char *buf, size_t size,
                        upb_arena *arena) {
  envoy_data_tap_v2alpha_Body *ret = envoy_data_tap_v2alpha_Body_new(arena);
  if (!ret) return NULL;
  if (!upb_decode(buf, size, ret, &envoy_data_tap_v2alpha_Body_msginit, arena)) return NULL;
  return ret;
}
UPB_INLINE envoy_data_tap_v2alpha_Body *envoy_data_tap_v2alpha_Body_parse_ex(const char *buf, size_t size,
                           const upb_extreg *extreg, int options,
                           upb_arena *arena) {
  envoy_data_tap_v2alpha_Body *ret = envoy_data_tap_v2alpha_Body_new(arena);
  if (!ret) return NULL;
  if (!_upb_decode(buf, size, ret, &envoy_data_tap_v2alpha_Body_msginit, extreg, options, arena)) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char *envoy_data_tap_v2alpha_Body_serialize(const envoy_data_tap_v2alpha_Body *msg, upb_arena *arena, size_t *len) {
  return upb_encode(msg, &envoy_data_tap_v2alpha_Body_msginit, arena, len);
}

typedef enum {
  envoy_data_tap_v2alpha_Body_body_type_as_bytes = 1,
  envoy_data_tap_v2alpha_Body_body_type_as_string = 2,
  envoy_data_tap_v2alpha_Body_body_type_NOT_SET = 0
} envoy_data_tap_v2alpha_Body_body_type_oneofcases;
UPB_INLINE envoy_data_tap_v2alpha_Body_body_type_oneofcases envoy_data_tap_v2alpha_Body_body_type_case(const envoy_data_tap_v2alpha_Body* msg) { return (envoy_data_tap_v2alpha_Body_body_type_oneofcases)*UPB_PTR_AT(msg, UPB_SIZE(12, 24), int32_t); }

UPB_INLINE bool envoy_data_tap_v2alpha_Body_has_as_bytes(const envoy_data_tap_v2alpha_Body *msg) { return _upb_getoneofcase(msg, UPB_SIZE(12, 24)) == 1; }
UPB_INLINE upb_strview envoy_data_tap_v2alpha_Body_as_bytes(const envoy_data_tap_v2alpha_Body *msg) { return UPB_READ_ONEOF(msg, upb_strview, UPB_SIZE(4, 8), UPB_SIZE(12, 24), 1, upb_strview_make("", strlen(""))); }
UPB_INLINE bool envoy_data_tap_v2alpha_Body_has_as_string(const envoy_data_tap_v2alpha_Body *msg) { return _upb_getoneofcase(msg, UPB_SIZE(12, 24)) == 2; }
UPB_INLINE upb_strview envoy_data_tap_v2alpha_Body_as_string(const envoy_data_tap_v2alpha_Body *msg) { return UPB_READ_ONEOF(msg, upb_strview, UPB_SIZE(4, 8), UPB_SIZE(12, 24), 2, upb_strview_make("", strlen(""))); }
UPB_INLINE bool envoy_data_tap_v2alpha_Body_truncated(const envoy_data_tap_v2alpha_Body *msg) { return *UPB_PTR_AT(msg, UPB_SIZE(0, 0), bool); }

UPB_INLINE void envoy_data_tap_v2alpha_Body_set_as_bytes(envoy_data_tap_v2alpha_Body *msg, upb_strview value) {
  UPB_WRITE_ONEOF(msg, upb_strview, UPB_SIZE(4, 8), value, UPB_SIZE(12, 24), 1);
}
UPB_INLINE void envoy_data_tap_v2alpha_Body_set_as_string(envoy_data_tap_v2alpha_Body *msg, upb_strview value) {
  UPB_WRITE_ONEOF(msg, upb_strview, UPB_SIZE(4, 8), value, UPB_SIZE(12, 24), 2);
}
UPB_INLINE void envoy_data_tap_v2alpha_Body_set_truncated(envoy_data_tap_v2alpha_Body *msg, bool value) {
  *UPB_PTR_AT(msg, UPB_SIZE(0, 0), bool) = value;
}

extern const upb_msglayout_file envoy_data_tap_v2alpha_common_proto_upb_file_layout;

#ifdef __cplusplus
}  /* extern "C" */
#endif

#include "upb/port_undef.inc"

#endif  /* ENVOY_DATA_TAP_V2ALPHA_COMMON_PROTO_UPB_H_ */
