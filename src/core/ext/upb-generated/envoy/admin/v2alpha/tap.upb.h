/* This file was generated by upbc (the upb compiler) from the input
 * file:
 *
 *     envoy/admin/v2alpha/tap.proto
 *
 * Do not edit -- your changes will be discarded when the file is
 * regenerated. */

#ifndef ENVOY_ADMIN_V2ALPHA_TAP_PROTO_UPB_H_
#define ENVOY_ADMIN_V2ALPHA_TAP_PROTO_UPB_H_

#include "upb/msg_internal.h"
#include "upb/decode.h"
#include "upb/decode_fast.h"
#include "upb/encode.h"

#include "upb/port_def.inc"

#ifdef __cplusplus
extern "C" {
#endif

struct envoy_admin_v2alpha_TapRequest;
typedef struct envoy_admin_v2alpha_TapRequest envoy_admin_v2alpha_TapRequest;
extern const upb_msglayout envoy_admin_v2alpha_TapRequest_msginit;
struct envoy_service_tap_v2alpha_TapConfig;
extern const upb_msglayout envoy_service_tap_v2alpha_TapConfig_msginit;


/* envoy.admin.v2alpha.TapRequest */

UPB_INLINE envoy_admin_v2alpha_TapRequest *envoy_admin_v2alpha_TapRequest_new(upb_arena *arena) {
  return (envoy_admin_v2alpha_TapRequest *)_upb_msg_new(&envoy_admin_v2alpha_TapRequest_msginit, arena);
}
UPB_INLINE envoy_admin_v2alpha_TapRequest *envoy_admin_v2alpha_TapRequest_parse(const char *buf, size_t size,
                        upb_arena *arena) {
  envoy_admin_v2alpha_TapRequest *ret = envoy_admin_v2alpha_TapRequest_new(arena);
  if (!ret) return NULL;
  if (!upb_decode(buf, size, ret, &envoy_admin_v2alpha_TapRequest_msginit, arena)) return NULL;
  return ret;
}
UPB_INLINE envoy_admin_v2alpha_TapRequest *envoy_admin_v2alpha_TapRequest_parse_ex(const char *buf, size_t size,
                           const upb_extreg *extreg, int options,
                           upb_arena *arena) {
  envoy_admin_v2alpha_TapRequest *ret = envoy_admin_v2alpha_TapRequest_new(arena);
  if (!ret) return NULL;
  if (!_upb_decode(buf, size, ret, &envoy_admin_v2alpha_TapRequest_msginit, extreg, options, arena)) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char *envoy_admin_v2alpha_TapRequest_serialize(const envoy_admin_v2alpha_TapRequest *msg, upb_arena *arena, size_t *len) {
  return upb_encode(msg, &envoy_admin_v2alpha_TapRequest_msginit, arena, len);
}

UPB_INLINE upb_strview envoy_admin_v2alpha_TapRequest_config_id(const envoy_admin_v2alpha_TapRequest *msg) { return *UPB_PTR_AT(msg, UPB_SIZE(4, 8), upb_strview); }
UPB_INLINE bool envoy_admin_v2alpha_TapRequest_has_tap_config(const envoy_admin_v2alpha_TapRequest *msg) { return _upb_hasbit(msg, 1); }
UPB_INLINE const struct envoy_service_tap_v2alpha_TapConfig* envoy_admin_v2alpha_TapRequest_tap_config(const envoy_admin_v2alpha_TapRequest *msg) { return *UPB_PTR_AT(msg, UPB_SIZE(12, 24), const struct envoy_service_tap_v2alpha_TapConfig*); }

UPB_INLINE void envoy_admin_v2alpha_TapRequest_set_config_id(envoy_admin_v2alpha_TapRequest *msg, upb_strview value) {
  *UPB_PTR_AT(msg, UPB_SIZE(4, 8), upb_strview) = value;
}
UPB_INLINE void envoy_admin_v2alpha_TapRequest_set_tap_config(envoy_admin_v2alpha_TapRequest *msg, struct envoy_service_tap_v2alpha_TapConfig* value) {
  _upb_sethas(msg, 1);
  *UPB_PTR_AT(msg, UPB_SIZE(12, 24), struct envoy_service_tap_v2alpha_TapConfig*) = value;
}
UPB_INLINE struct envoy_service_tap_v2alpha_TapConfig* envoy_admin_v2alpha_TapRequest_mutable_tap_config(envoy_admin_v2alpha_TapRequest *msg, upb_arena *arena) {
  struct envoy_service_tap_v2alpha_TapConfig* sub = (struct envoy_service_tap_v2alpha_TapConfig*)envoy_admin_v2alpha_TapRequest_tap_config(msg);
  if (sub == NULL) {
    sub = (struct envoy_service_tap_v2alpha_TapConfig*)_upb_msg_new(&envoy_service_tap_v2alpha_TapConfig_msginit, arena);
    if (!sub) return NULL;
    envoy_admin_v2alpha_TapRequest_set_tap_config(msg, sub);
  }
  return sub;
}

extern const upb_msglayout_file envoy_admin_v2alpha_tap_proto_upb_file_layout;

#ifdef __cplusplus
}  /* extern "C" */
#endif

#include "upb/port_undef.inc"

#endif  /* ENVOY_ADMIN_V2ALPHA_TAP_PROTO_UPB_H_ */
