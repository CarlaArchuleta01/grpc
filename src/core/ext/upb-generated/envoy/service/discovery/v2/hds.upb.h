/* This file was generated by upbc (the upb compiler) from the input
 * file:
 *
 *     envoy/service/discovery/v2/hds.proto
 *
 * Do not edit -- your changes will be discarded when the file is
 * regenerated. */

#ifndef ENVOY_SERVICE_DISCOVERY_V2_HDS_PROTO_UPB_H_
#define ENVOY_SERVICE_DISCOVERY_V2_HDS_PROTO_UPB_H_

#include "upb/msg_internal.h"
#include "upb/decode.h"
#include "upb/decode_fast.h"
#include "upb/encode.h"

#include "upb/port_def.inc"

#ifdef __cplusplus
extern "C" {
#endif

struct envoy_service_discovery_v2_Capability;
struct envoy_service_discovery_v2_HealthCheckRequest;
struct envoy_service_discovery_v2_EndpointHealth;
struct envoy_service_discovery_v2_EndpointHealthResponse;
struct envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse;
struct envoy_service_discovery_v2_LocalityEndpoints;
struct envoy_service_discovery_v2_ClusterHealthCheck;
struct envoy_service_discovery_v2_HealthCheckSpecifier;
typedef struct envoy_service_discovery_v2_Capability envoy_service_discovery_v2_Capability;
typedef struct envoy_service_discovery_v2_HealthCheckRequest envoy_service_discovery_v2_HealthCheckRequest;
typedef struct envoy_service_discovery_v2_EndpointHealth envoy_service_discovery_v2_EndpointHealth;
typedef struct envoy_service_discovery_v2_EndpointHealthResponse envoy_service_discovery_v2_EndpointHealthResponse;
typedef struct envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse;
typedef struct envoy_service_discovery_v2_LocalityEndpoints envoy_service_discovery_v2_LocalityEndpoints;
typedef struct envoy_service_discovery_v2_ClusterHealthCheck envoy_service_discovery_v2_ClusterHealthCheck;
typedef struct envoy_service_discovery_v2_HealthCheckSpecifier envoy_service_discovery_v2_HealthCheckSpecifier;
extern const upb_msglayout envoy_service_discovery_v2_Capability_msginit;
extern const upb_msglayout envoy_service_discovery_v2_HealthCheckRequest_msginit;
extern const upb_msglayout envoy_service_discovery_v2_EndpointHealth_msginit;
extern const upb_msglayout envoy_service_discovery_v2_EndpointHealthResponse_msginit;
extern const upb_msglayout envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_msginit;
extern const upb_msglayout envoy_service_discovery_v2_LocalityEndpoints_msginit;
extern const upb_msglayout envoy_service_discovery_v2_ClusterHealthCheck_msginit;
extern const upb_msglayout envoy_service_discovery_v2_HealthCheckSpecifier_msginit;
struct envoy_api_v2_core_HealthCheck;
struct envoy_api_v2_core_Locality;
struct envoy_api_v2_core_Node;
struct envoy_api_v2_endpoint_Endpoint;
struct google_protobuf_Duration;
extern const upb_msglayout envoy_api_v2_core_HealthCheck_msginit;
extern const upb_msglayout envoy_api_v2_core_Locality_msginit;
extern const upb_msglayout envoy_api_v2_core_Node_msginit;
extern const upb_msglayout envoy_api_v2_endpoint_Endpoint_msginit;
extern const upb_msglayout google_protobuf_Duration_msginit;

typedef enum {
  envoy_service_discovery_v2_Capability_HTTP = 0,
  envoy_service_discovery_v2_Capability_TCP = 1,
  envoy_service_discovery_v2_Capability_REDIS = 2
} envoy_service_discovery_v2_Capability_Protocol;


/* envoy.service.discovery.v2.Capability */

UPB_INLINE envoy_service_discovery_v2_Capability *envoy_service_discovery_v2_Capability_new(upb_arena *arena) {
  return (envoy_service_discovery_v2_Capability *)_upb_msg_new(&envoy_service_discovery_v2_Capability_msginit, arena);
}
UPB_INLINE envoy_service_discovery_v2_Capability *envoy_service_discovery_v2_Capability_parse(const char *buf, size_t size,
                        upb_arena *arena) {
  envoy_service_discovery_v2_Capability *ret = envoy_service_discovery_v2_Capability_new(arena);
  if (!ret) return NULL;
  if (!upb_decode(buf, size, ret, &envoy_service_discovery_v2_Capability_msginit, arena)) return NULL;
  return ret;
}
UPB_INLINE envoy_service_discovery_v2_Capability *envoy_service_discovery_v2_Capability_parse_ex(const char *buf, size_t size,
                           const upb_extreg *extreg, int options,
                           upb_arena *arena) {
  envoy_service_discovery_v2_Capability *ret = envoy_service_discovery_v2_Capability_new(arena);
  if (!ret) return NULL;
  if (!_upb_decode(buf, size, ret, &envoy_service_discovery_v2_Capability_msginit, extreg, options, arena)) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char *envoy_service_discovery_v2_Capability_serialize(const envoy_service_discovery_v2_Capability *msg, upb_arena *arena, size_t *len) {
  return upb_encode(msg, &envoy_service_discovery_v2_Capability_msginit, arena, len);
}

UPB_INLINE int32_t const* envoy_service_discovery_v2_Capability_health_check_protocols(const envoy_service_discovery_v2_Capability *msg, size_t *len) { return (int32_t const*)_upb_array_accessor(msg, UPB_SIZE(0, 0), len); }

UPB_INLINE int32_t* envoy_service_discovery_v2_Capability_mutable_health_check_protocols(envoy_service_discovery_v2_Capability *msg, size_t *len) {
  return (int32_t*)_upb_array_mutable_accessor(msg, UPB_SIZE(0, 0), len);
}
UPB_INLINE int32_t* envoy_service_discovery_v2_Capability_resize_health_check_protocols(envoy_service_discovery_v2_Capability *msg, size_t len, upb_arena *arena) {
  return (int32_t*)_upb_array_resize_accessor2(msg, UPB_SIZE(0, 0), len, 2, arena);
}
UPB_INLINE bool envoy_service_discovery_v2_Capability_add_health_check_protocols(envoy_service_discovery_v2_Capability *msg, int32_t val, upb_arena *arena) {
  return _upb_array_append_accessor2(msg, UPB_SIZE(0, 0), 2, &val,
      arena);
}

/* envoy.service.discovery.v2.HealthCheckRequest */

UPB_INLINE envoy_service_discovery_v2_HealthCheckRequest *envoy_service_discovery_v2_HealthCheckRequest_new(upb_arena *arena) {
  return (envoy_service_discovery_v2_HealthCheckRequest *)_upb_msg_new(&envoy_service_discovery_v2_HealthCheckRequest_msginit, arena);
}
UPB_INLINE envoy_service_discovery_v2_HealthCheckRequest *envoy_service_discovery_v2_HealthCheckRequest_parse(const char *buf, size_t size,
                        upb_arena *arena) {
  envoy_service_discovery_v2_HealthCheckRequest *ret = envoy_service_discovery_v2_HealthCheckRequest_new(arena);
  if (!ret) return NULL;
  if (!upb_decode(buf, size, ret, &envoy_service_discovery_v2_HealthCheckRequest_msginit, arena)) return NULL;
  return ret;
}
UPB_INLINE envoy_service_discovery_v2_HealthCheckRequest *envoy_service_discovery_v2_HealthCheckRequest_parse_ex(const char *buf, size_t size,
                           const upb_extreg *extreg, int options,
                           upb_arena *arena) {
  envoy_service_discovery_v2_HealthCheckRequest *ret = envoy_service_discovery_v2_HealthCheckRequest_new(arena);
  if (!ret) return NULL;
  if (!_upb_decode(buf, size, ret, &envoy_service_discovery_v2_HealthCheckRequest_msginit, extreg, options, arena)) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char *envoy_service_discovery_v2_HealthCheckRequest_serialize(const envoy_service_discovery_v2_HealthCheckRequest *msg, upb_arena *arena, size_t *len) {
  return upb_encode(msg, &envoy_service_discovery_v2_HealthCheckRequest_msginit, arena, len);
}

UPB_INLINE bool envoy_service_discovery_v2_HealthCheckRequest_has_node(const envoy_service_discovery_v2_HealthCheckRequest *msg) { return _upb_hasbit(msg, 1); }
UPB_INLINE const struct envoy_api_v2_core_Node* envoy_service_discovery_v2_HealthCheckRequest_node(const envoy_service_discovery_v2_HealthCheckRequest *msg) { return *UPB_PTR_AT(msg, UPB_SIZE(4, 8), const struct envoy_api_v2_core_Node*); }
UPB_INLINE bool envoy_service_discovery_v2_HealthCheckRequest_has_capability(const envoy_service_discovery_v2_HealthCheckRequest *msg) { return _upb_hasbit(msg, 2); }
UPB_INLINE const envoy_service_discovery_v2_Capability* envoy_service_discovery_v2_HealthCheckRequest_capability(const envoy_service_discovery_v2_HealthCheckRequest *msg) { return *UPB_PTR_AT(msg, UPB_SIZE(8, 16), const envoy_service_discovery_v2_Capability*); }

UPB_INLINE void envoy_service_discovery_v2_HealthCheckRequest_set_node(envoy_service_discovery_v2_HealthCheckRequest *msg, struct envoy_api_v2_core_Node* value) {
  _upb_sethas(msg, 1);
  *UPB_PTR_AT(msg, UPB_SIZE(4, 8), struct envoy_api_v2_core_Node*) = value;
}
UPB_INLINE struct envoy_api_v2_core_Node* envoy_service_discovery_v2_HealthCheckRequest_mutable_node(envoy_service_discovery_v2_HealthCheckRequest *msg, upb_arena *arena) {
  struct envoy_api_v2_core_Node* sub = (struct envoy_api_v2_core_Node*)envoy_service_discovery_v2_HealthCheckRequest_node(msg);
  if (sub == NULL) {
    sub = (struct envoy_api_v2_core_Node*)_upb_msg_new(&envoy_api_v2_core_Node_msginit, arena);
    if (!sub) return NULL;
    envoy_service_discovery_v2_HealthCheckRequest_set_node(msg, sub);
  }
  return sub;
}
UPB_INLINE void envoy_service_discovery_v2_HealthCheckRequest_set_capability(envoy_service_discovery_v2_HealthCheckRequest *msg, envoy_service_discovery_v2_Capability* value) {
  _upb_sethas(msg, 2);
  *UPB_PTR_AT(msg, UPB_SIZE(8, 16), envoy_service_discovery_v2_Capability*) = value;
}
UPB_INLINE struct envoy_service_discovery_v2_Capability* envoy_service_discovery_v2_HealthCheckRequest_mutable_capability(envoy_service_discovery_v2_HealthCheckRequest *msg, upb_arena *arena) {
  struct envoy_service_discovery_v2_Capability* sub = (struct envoy_service_discovery_v2_Capability*)envoy_service_discovery_v2_HealthCheckRequest_capability(msg);
  if (sub == NULL) {
    sub = (struct envoy_service_discovery_v2_Capability*)_upb_msg_new(&envoy_service_discovery_v2_Capability_msginit, arena);
    if (!sub) return NULL;
    envoy_service_discovery_v2_HealthCheckRequest_set_capability(msg, sub);
  }
  return sub;
}

/* envoy.service.discovery.v2.EndpointHealth */

UPB_INLINE envoy_service_discovery_v2_EndpointHealth *envoy_service_discovery_v2_EndpointHealth_new(upb_arena *arena) {
  return (envoy_service_discovery_v2_EndpointHealth *)_upb_msg_new(&envoy_service_discovery_v2_EndpointHealth_msginit, arena);
}
UPB_INLINE envoy_service_discovery_v2_EndpointHealth *envoy_service_discovery_v2_EndpointHealth_parse(const char *buf, size_t size,
                        upb_arena *arena) {
  envoy_service_discovery_v2_EndpointHealth *ret = envoy_service_discovery_v2_EndpointHealth_new(arena);
  if (!ret) return NULL;
  if (!upb_decode(buf, size, ret, &envoy_service_discovery_v2_EndpointHealth_msginit, arena)) return NULL;
  return ret;
}
UPB_INLINE envoy_service_discovery_v2_EndpointHealth *envoy_service_discovery_v2_EndpointHealth_parse_ex(const char *buf, size_t size,
                           const upb_extreg *extreg, int options,
                           upb_arena *arena) {
  envoy_service_discovery_v2_EndpointHealth *ret = envoy_service_discovery_v2_EndpointHealth_new(arena);
  if (!ret) return NULL;
  if (!_upb_decode(buf, size, ret, &envoy_service_discovery_v2_EndpointHealth_msginit, extreg, options, arena)) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char *envoy_service_discovery_v2_EndpointHealth_serialize(const envoy_service_discovery_v2_EndpointHealth *msg, upb_arena *arena, size_t *len) {
  return upb_encode(msg, &envoy_service_discovery_v2_EndpointHealth_msginit, arena, len);
}

UPB_INLINE bool envoy_service_discovery_v2_EndpointHealth_has_endpoint(const envoy_service_discovery_v2_EndpointHealth *msg) { return _upb_hasbit(msg, 1); }
UPB_INLINE const struct envoy_api_v2_endpoint_Endpoint* envoy_service_discovery_v2_EndpointHealth_endpoint(const envoy_service_discovery_v2_EndpointHealth *msg) { return *UPB_PTR_AT(msg, UPB_SIZE(8, 8), const struct envoy_api_v2_endpoint_Endpoint*); }
UPB_INLINE int32_t envoy_service_discovery_v2_EndpointHealth_health_status(const envoy_service_discovery_v2_EndpointHealth *msg) { return *UPB_PTR_AT(msg, UPB_SIZE(4, 4), int32_t); }

UPB_INLINE void envoy_service_discovery_v2_EndpointHealth_set_endpoint(envoy_service_discovery_v2_EndpointHealth *msg, struct envoy_api_v2_endpoint_Endpoint* value) {
  _upb_sethas(msg, 1);
  *UPB_PTR_AT(msg, UPB_SIZE(8, 8), struct envoy_api_v2_endpoint_Endpoint*) = value;
}
UPB_INLINE struct envoy_api_v2_endpoint_Endpoint* envoy_service_discovery_v2_EndpointHealth_mutable_endpoint(envoy_service_discovery_v2_EndpointHealth *msg, upb_arena *arena) {
  struct envoy_api_v2_endpoint_Endpoint* sub = (struct envoy_api_v2_endpoint_Endpoint*)envoy_service_discovery_v2_EndpointHealth_endpoint(msg);
  if (sub == NULL) {
    sub = (struct envoy_api_v2_endpoint_Endpoint*)_upb_msg_new(&envoy_api_v2_endpoint_Endpoint_msginit, arena);
    if (!sub) return NULL;
    envoy_service_discovery_v2_EndpointHealth_set_endpoint(msg, sub);
  }
  return sub;
}
UPB_INLINE void envoy_service_discovery_v2_EndpointHealth_set_health_status(envoy_service_discovery_v2_EndpointHealth *msg, int32_t value) {
  *UPB_PTR_AT(msg, UPB_SIZE(4, 4), int32_t) = value;
}

/* envoy.service.discovery.v2.EndpointHealthResponse */

UPB_INLINE envoy_service_discovery_v2_EndpointHealthResponse *envoy_service_discovery_v2_EndpointHealthResponse_new(upb_arena *arena) {
  return (envoy_service_discovery_v2_EndpointHealthResponse *)_upb_msg_new(&envoy_service_discovery_v2_EndpointHealthResponse_msginit, arena);
}
UPB_INLINE envoy_service_discovery_v2_EndpointHealthResponse *envoy_service_discovery_v2_EndpointHealthResponse_parse(const char *buf, size_t size,
                        upb_arena *arena) {
  envoy_service_discovery_v2_EndpointHealthResponse *ret = envoy_service_discovery_v2_EndpointHealthResponse_new(arena);
  if (!ret) return NULL;
  if (!upb_decode(buf, size, ret, &envoy_service_discovery_v2_EndpointHealthResponse_msginit, arena)) return NULL;
  return ret;
}
UPB_INLINE envoy_service_discovery_v2_EndpointHealthResponse *envoy_service_discovery_v2_EndpointHealthResponse_parse_ex(const char *buf, size_t size,
                           const upb_extreg *extreg, int options,
                           upb_arena *arena) {
  envoy_service_discovery_v2_EndpointHealthResponse *ret = envoy_service_discovery_v2_EndpointHealthResponse_new(arena);
  if (!ret) return NULL;
  if (!_upb_decode(buf, size, ret, &envoy_service_discovery_v2_EndpointHealthResponse_msginit, extreg, options, arena)) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char *envoy_service_discovery_v2_EndpointHealthResponse_serialize(const envoy_service_discovery_v2_EndpointHealthResponse *msg, upb_arena *arena, size_t *len) {
  return upb_encode(msg, &envoy_service_discovery_v2_EndpointHealthResponse_msginit, arena, len);
}

UPB_INLINE bool envoy_service_discovery_v2_EndpointHealthResponse_has_endpoints_health(const envoy_service_discovery_v2_EndpointHealthResponse *msg) { return _upb_has_submsg_nohasbit(msg, UPB_SIZE(0, 0)); }
UPB_INLINE const envoy_service_discovery_v2_EndpointHealth* const* envoy_service_discovery_v2_EndpointHealthResponse_endpoints_health(const envoy_service_discovery_v2_EndpointHealthResponse *msg, size_t *len) { return (const envoy_service_discovery_v2_EndpointHealth* const*)_upb_array_accessor(msg, UPB_SIZE(0, 0), len); }

UPB_INLINE envoy_service_discovery_v2_EndpointHealth** envoy_service_discovery_v2_EndpointHealthResponse_mutable_endpoints_health(envoy_service_discovery_v2_EndpointHealthResponse *msg, size_t *len) {
  return (envoy_service_discovery_v2_EndpointHealth**)_upb_array_mutable_accessor(msg, UPB_SIZE(0, 0), len);
}
UPB_INLINE envoy_service_discovery_v2_EndpointHealth** envoy_service_discovery_v2_EndpointHealthResponse_resize_endpoints_health(envoy_service_discovery_v2_EndpointHealthResponse *msg, size_t len, upb_arena *arena) {
  return (envoy_service_discovery_v2_EndpointHealth**)_upb_array_resize_accessor2(msg, UPB_SIZE(0, 0), len, UPB_SIZE(2, 3), arena);
}
UPB_INLINE struct envoy_service_discovery_v2_EndpointHealth* envoy_service_discovery_v2_EndpointHealthResponse_add_endpoints_health(envoy_service_discovery_v2_EndpointHealthResponse *msg, upb_arena *arena) {
  struct envoy_service_discovery_v2_EndpointHealth* sub = (struct envoy_service_discovery_v2_EndpointHealth*)_upb_msg_new(&envoy_service_discovery_v2_EndpointHealth_msginit, arena);
  bool ok = _upb_array_append_accessor2(
      msg, UPB_SIZE(0, 0), UPB_SIZE(2, 3), &sub, arena);
  if (!ok) return NULL;
  return sub;
}

/* envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse */

UPB_INLINE envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse *envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_new(upb_arena *arena) {
  return (envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse *)_upb_msg_new(&envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_msginit, arena);
}
UPB_INLINE envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse *envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_parse(const char *buf, size_t size,
                        upb_arena *arena) {
  envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse *ret = envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_new(arena);
  if (!ret) return NULL;
  if (!upb_decode(buf, size, ret, &envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_msginit, arena)) return NULL;
  return ret;
}
UPB_INLINE envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse *envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_parse_ex(const char *buf, size_t size,
                           const upb_extreg *extreg, int options,
                           upb_arena *arena) {
  envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse *ret = envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_new(arena);
  if (!ret) return NULL;
  if (!_upb_decode(buf, size, ret, &envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_msginit, extreg, options, arena)) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char *envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_serialize(const envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse *msg, upb_arena *arena, size_t *len) {
  return upb_encode(msg, &envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_msginit, arena, len);
}

typedef enum {
  envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_request_type_health_check_request = 1,
  envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_request_type_endpoint_health_response = 2,
  envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_request_type_NOT_SET = 0
} envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_request_type_oneofcases;
UPB_INLINE envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_request_type_oneofcases envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_request_type_case(const envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse* msg) { return (envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_request_type_oneofcases)*UPB_PTR_AT(msg, UPB_SIZE(4, 8), int32_t); }

UPB_INLINE bool envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_has_health_check_request(const envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse *msg) { return _upb_getoneofcase(msg, UPB_SIZE(4, 8)) == 1; }
UPB_INLINE const envoy_service_discovery_v2_HealthCheckRequest* envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_health_check_request(const envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse *msg) { return UPB_READ_ONEOF(msg, const envoy_service_discovery_v2_HealthCheckRequest*, UPB_SIZE(0, 0), UPB_SIZE(4, 8), 1, NULL); }
UPB_INLINE bool envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_has_endpoint_health_response(const envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse *msg) { return _upb_getoneofcase(msg, UPB_SIZE(4, 8)) == 2; }
UPB_INLINE const envoy_service_discovery_v2_EndpointHealthResponse* envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_endpoint_health_response(const envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse *msg) { return UPB_READ_ONEOF(msg, const envoy_service_discovery_v2_EndpointHealthResponse*, UPB_SIZE(0, 0), UPB_SIZE(4, 8), 2, NULL); }

UPB_INLINE void envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_set_health_check_request(envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse *msg, envoy_service_discovery_v2_HealthCheckRequest* value) {
  UPB_WRITE_ONEOF(msg, envoy_service_discovery_v2_HealthCheckRequest*, UPB_SIZE(0, 0), value, UPB_SIZE(4, 8), 1);
}
UPB_INLINE struct envoy_service_discovery_v2_HealthCheckRequest* envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_mutable_health_check_request(envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse *msg, upb_arena *arena) {
  struct envoy_service_discovery_v2_HealthCheckRequest* sub = (struct envoy_service_discovery_v2_HealthCheckRequest*)envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_health_check_request(msg);
  if (sub == NULL) {
    sub = (struct envoy_service_discovery_v2_HealthCheckRequest*)_upb_msg_new(&envoy_service_discovery_v2_HealthCheckRequest_msginit, arena);
    if (!sub) return NULL;
    envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_set_health_check_request(msg, sub);
  }
  return sub;
}
UPB_INLINE void envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_set_endpoint_health_response(envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse *msg, envoy_service_discovery_v2_EndpointHealthResponse* value) {
  UPB_WRITE_ONEOF(msg, envoy_service_discovery_v2_EndpointHealthResponse*, UPB_SIZE(0, 0), value, UPB_SIZE(4, 8), 2);
}
UPB_INLINE struct envoy_service_discovery_v2_EndpointHealthResponse* envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_mutable_endpoint_health_response(envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse *msg, upb_arena *arena) {
  struct envoy_service_discovery_v2_EndpointHealthResponse* sub = (struct envoy_service_discovery_v2_EndpointHealthResponse*)envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_endpoint_health_response(msg);
  if (sub == NULL) {
    sub = (struct envoy_service_discovery_v2_EndpointHealthResponse*)_upb_msg_new(&envoy_service_discovery_v2_EndpointHealthResponse_msginit, arena);
    if (!sub) return NULL;
    envoy_service_discovery_v2_HealthCheckRequestOrEndpointHealthResponse_set_endpoint_health_response(msg, sub);
  }
  return sub;
}

/* envoy.service.discovery.v2.LocalityEndpoints */

UPB_INLINE envoy_service_discovery_v2_LocalityEndpoints *envoy_service_discovery_v2_LocalityEndpoints_new(upb_arena *arena) {
  return (envoy_service_discovery_v2_LocalityEndpoints *)_upb_msg_new(&envoy_service_discovery_v2_LocalityEndpoints_msginit, arena);
}
UPB_INLINE envoy_service_discovery_v2_LocalityEndpoints *envoy_service_discovery_v2_LocalityEndpoints_parse(const char *buf, size_t size,
                        upb_arena *arena) {
  envoy_service_discovery_v2_LocalityEndpoints *ret = envoy_service_discovery_v2_LocalityEndpoints_new(arena);
  if (!ret) return NULL;
  if (!upb_decode(buf, size, ret, &envoy_service_discovery_v2_LocalityEndpoints_msginit, arena)) return NULL;
  return ret;
}
UPB_INLINE envoy_service_discovery_v2_LocalityEndpoints *envoy_service_discovery_v2_LocalityEndpoints_parse_ex(const char *buf, size_t size,
                           const upb_extreg *extreg, int options,
                           upb_arena *arena) {
  envoy_service_discovery_v2_LocalityEndpoints *ret = envoy_service_discovery_v2_LocalityEndpoints_new(arena);
  if (!ret) return NULL;
  if (!_upb_decode(buf, size, ret, &envoy_service_discovery_v2_LocalityEndpoints_msginit, extreg, options, arena)) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char *envoy_service_discovery_v2_LocalityEndpoints_serialize(const envoy_service_discovery_v2_LocalityEndpoints *msg, upb_arena *arena, size_t *len) {
  return upb_encode(msg, &envoy_service_discovery_v2_LocalityEndpoints_msginit, arena, len);
}

UPB_INLINE bool envoy_service_discovery_v2_LocalityEndpoints_has_locality(const envoy_service_discovery_v2_LocalityEndpoints *msg) { return _upb_hasbit(msg, 1); }
UPB_INLINE const struct envoy_api_v2_core_Locality* envoy_service_discovery_v2_LocalityEndpoints_locality(const envoy_service_discovery_v2_LocalityEndpoints *msg) { return *UPB_PTR_AT(msg, UPB_SIZE(4, 8), const struct envoy_api_v2_core_Locality*); }
UPB_INLINE bool envoy_service_discovery_v2_LocalityEndpoints_has_endpoints(const envoy_service_discovery_v2_LocalityEndpoints *msg) { return _upb_has_submsg_nohasbit(msg, UPB_SIZE(8, 16)); }
UPB_INLINE const struct envoy_api_v2_endpoint_Endpoint* const* envoy_service_discovery_v2_LocalityEndpoints_endpoints(const envoy_service_discovery_v2_LocalityEndpoints *msg, size_t *len) { return (const struct envoy_api_v2_endpoint_Endpoint* const*)_upb_array_accessor(msg, UPB_SIZE(8, 16), len); }

UPB_INLINE void envoy_service_discovery_v2_LocalityEndpoints_set_locality(envoy_service_discovery_v2_LocalityEndpoints *msg, struct envoy_api_v2_core_Locality* value) {
  _upb_sethas(msg, 1);
  *UPB_PTR_AT(msg, UPB_SIZE(4, 8), struct envoy_api_v2_core_Locality*) = value;
}
UPB_INLINE struct envoy_api_v2_core_Locality* envoy_service_discovery_v2_LocalityEndpoints_mutable_locality(envoy_service_discovery_v2_LocalityEndpoints *msg, upb_arena *arena) {
  struct envoy_api_v2_core_Locality* sub = (struct envoy_api_v2_core_Locality*)envoy_service_discovery_v2_LocalityEndpoints_locality(msg);
  if (sub == NULL) {
    sub = (struct envoy_api_v2_core_Locality*)_upb_msg_new(&envoy_api_v2_core_Locality_msginit, arena);
    if (!sub) return NULL;
    envoy_service_discovery_v2_LocalityEndpoints_set_locality(msg, sub);
  }
  return sub;
}
UPB_INLINE struct envoy_api_v2_endpoint_Endpoint** envoy_service_discovery_v2_LocalityEndpoints_mutable_endpoints(envoy_service_discovery_v2_LocalityEndpoints *msg, size_t *len) {
  return (struct envoy_api_v2_endpoint_Endpoint**)_upb_array_mutable_accessor(msg, UPB_SIZE(8, 16), len);
}
UPB_INLINE struct envoy_api_v2_endpoint_Endpoint** envoy_service_discovery_v2_LocalityEndpoints_resize_endpoints(envoy_service_discovery_v2_LocalityEndpoints *msg, size_t len, upb_arena *arena) {
  return (struct envoy_api_v2_endpoint_Endpoint**)_upb_array_resize_accessor2(msg, UPB_SIZE(8, 16), len, UPB_SIZE(2, 3), arena);
}
UPB_INLINE struct envoy_api_v2_endpoint_Endpoint* envoy_service_discovery_v2_LocalityEndpoints_add_endpoints(envoy_service_discovery_v2_LocalityEndpoints *msg, upb_arena *arena) {
  struct envoy_api_v2_endpoint_Endpoint* sub = (struct envoy_api_v2_endpoint_Endpoint*)_upb_msg_new(&envoy_api_v2_endpoint_Endpoint_msginit, arena);
  bool ok = _upb_array_append_accessor2(
      msg, UPB_SIZE(8, 16), UPB_SIZE(2, 3), &sub, arena);
  if (!ok) return NULL;
  return sub;
}

/* envoy.service.discovery.v2.ClusterHealthCheck */

UPB_INLINE envoy_service_discovery_v2_ClusterHealthCheck *envoy_service_discovery_v2_ClusterHealthCheck_new(upb_arena *arena) {
  return (envoy_service_discovery_v2_ClusterHealthCheck *)_upb_msg_new(&envoy_service_discovery_v2_ClusterHealthCheck_msginit, arena);
}
UPB_INLINE envoy_service_discovery_v2_ClusterHealthCheck *envoy_service_discovery_v2_ClusterHealthCheck_parse(const char *buf, size_t size,
                        upb_arena *arena) {
  envoy_service_discovery_v2_ClusterHealthCheck *ret = envoy_service_discovery_v2_ClusterHealthCheck_new(arena);
  if (!ret) return NULL;
  if (!upb_decode(buf, size, ret, &envoy_service_discovery_v2_ClusterHealthCheck_msginit, arena)) return NULL;
  return ret;
}
UPB_INLINE envoy_service_discovery_v2_ClusterHealthCheck *envoy_service_discovery_v2_ClusterHealthCheck_parse_ex(const char *buf, size_t size,
                           const upb_extreg *extreg, int options,
                           upb_arena *arena) {
  envoy_service_discovery_v2_ClusterHealthCheck *ret = envoy_service_discovery_v2_ClusterHealthCheck_new(arena);
  if (!ret) return NULL;
  if (!_upb_decode(buf, size, ret, &envoy_service_discovery_v2_ClusterHealthCheck_msginit, extreg, options, arena)) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char *envoy_service_discovery_v2_ClusterHealthCheck_serialize(const envoy_service_discovery_v2_ClusterHealthCheck *msg, upb_arena *arena, size_t *len) {
  return upb_encode(msg, &envoy_service_discovery_v2_ClusterHealthCheck_msginit, arena, len);
}

UPB_INLINE upb_strview envoy_service_discovery_v2_ClusterHealthCheck_cluster_name(const envoy_service_discovery_v2_ClusterHealthCheck *msg) { return *UPB_PTR_AT(msg, UPB_SIZE(0, 0), upb_strview); }
UPB_INLINE bool envoy_service_discovery_v2_ClusterHealthCheck_has_health_checks(const envoy_service_discovery_v2_ClusterHealthCheck *msg) { return _upb_has_submsg_nohasbit(msg, UPB_SIZE(8, 16)); }
UPB_INLINE const struct envoy_api_v2_core_HealthCheck* const* envoy_service_discovery_v2_ClusterHealthCheck_health_checks(const envoy_service_discovery_v2_ClusterHealthCheck *msg, size_t *len) { return (const struct envoy_api_v2_core_HealthCheck* const*)_upb_array_accessor(msg, UPB_SIZE(8, 16), len); }
UPB_INLINE bool envoy_service_discovery_v2_ClusterHealthCheck_has_locality_endpoints(const envoy_service_discovery_v2_ClusterHealthCheck *msg) { return _upb_has_submsg_nohasbit(msg, UPB_SIZE(12, 24)); }
UPB_INLINE const envoy_service_discovery_v2_LocalityEndpoints* const* envoy_service_discovery_v2_ClusterHealthCheck_locality_endpoints(const envoy_service_discovery_v2_ClusterHealthCheck *msg, size_t *len) { return (const envoy_service_discovery_v2_LocalityEndpoints* const*)_upb_array_accessor(msg, UPB_SIZE(12, 24), len); }

UPB_INLINE void envoy_service_discovery_v2_ClusterHealthCheck_set_cluster_name(envoy_service_discovery_v2_ClusterHealthCheck *msg, upb_strview value) {
  *UPB_PTR_AT(msg, UPB_SIZE(0, 0), upb_strview) = value;
}
UPB_INLINE struct envoy_api_v2_core_HealthCheck** envoy_service_discovery_v2_ClusterHealthCheck_mutable_health_checks(envoy_service_discovery_v2_ClusterHealthCheck *msg, size_t *len) {
  return (struct envoy_api_v2_core_HealthCheck**)_upb_array_mutable_accessor(msg, UPB_SIZE(8, 16), len);
}
UPB_INLINE struct envoy_api_v2_core_HealthCheck** envoy_service_discovery_v2_ClusterHealthCheck_resize_health_checks(envoy_service_discovery_v2_ClusterHealthCheck *msg, size_t len, upb_arena *arena) {
  return (struct envoy_api_v2_core_HealthCheck**)_upb_array_resize_accessor2(msg, UPB_SIZE(8, 16), len, UPB_SIZE(2, 3), arena);
}
UPB_INLINE struct envoy_api_v2_core_HealthCheck* envoy_service_discovery_v2_ClusterHealthCheck_add_health_checks(envoy_service_discovery_v2_ClusterHealthCheck *msg, upb_arena *arena) {
  struct envoy_api_v2_core_HealthCheck* sub = (struct envoy_api_v2_core_HealthCheck*)_upb_msg_new(&envoy_api_v2_core_HealthCheck_msginit, arena);
  bool ok = _upb_array_append_accessor2(
      msg, UPB_SIZE(8, 16), UPB_SIZE(2, 3), &sub, arena);
  if (!ok) return NULL;
  return sub;
}
UPB_INLINE envoy_service_discovery_v2_LocalityEndpoints** envoy_service_discovery_v2_ClusterHealthCheck_mutable_locality_endpoints(envoy_service_discovery_v2_ClusterHealthCheck *msg, size_t *len) {
  return (envoy_service_discovery_v2_LocalityEndpoints**)_upb_array_mutable_accessor(msg, UPB_SIZE(12, 24), len);
}
UPB_INLINE envoy_service_discovery_v2_LocalityEndpoints** envoy_service_discovery_v2_ClusterHealthCheck_resize_locality_endpoints(envoy_service_discovery_v2_ClusterHealthCheck *msg, size_t len, upb_arena *arena) {
  return (envoy_service_discovery_v2_LocalityEndpoints**)_upb_array_resize_accessor2(msg, UPB_SIZE(12, 24), len, UPB_SIZE(2, 3), arena);
}
UPB_INLINE struct envoy_service_discovery_v2_LocalityEndpoints* envoy_service_discovery_v2_ClusterHealthCheck_add_locality_endpoints(envoy_service_discovery_v2_ClusterHealthCheck *msg, upb_arena *arena) {
  struct envoy_service_discovery_v2_LocalityEndpoints* sub = (struct envoy_service_discovery_v2_LocalityEndpoints*)_upb_msg_new(&envoy_service_discovery_v2_LocalityEndpoints_msginit, arena);
  bool ok = _upb_array_append_accessor2(
      msg, UPB_SIZE(12, 24), UPB_SIZE(2, 3), &sub, arena);
  if (!ok) return NULL;
  return sub;
}

/* envoy.service.discovery.v2.HealthCheckSpecifier */

UPB_INLINE envoy_service_discovery_v2_HealthCheckSpecifier *envoy_service_discovery_v2_HealthCheckSpecifier_new(upb_arena *arena) {
  return (envoy_service_discovery_v2_HealthCheckSpecifier *)_upb_msg_new(&envoy_service_discovery_v2_HealthCheckSpecifier_msginit, arena);
}
UPB_INLINE envoy_service_discovery_v2_HealthCheckSpecifier *envoy_service_discovery_v2_HealthCheckSpecifier_parse(const char *buf, size_t size,
                        upb_arena *arena) {
  envoy_service_discovery_v2_HealthCheckSpecifier *ret = envoy_service_discovery_v2_HealthCheckSpecifier_new(arena);
  if (!ret) return NULL;
  if (!upb_decode(buf, size, ret, &envoy_service_discovery_v2_HealthCheckSpecifier_msginit, arena)) return NULL;
  return ret;
}
UPB_INLINE envoy_service_discovery_v2_HealthCheckSpecifier *envoy_service_discovery_v2_HealthCheckSpecifier_parse_ex(const char *buf, size_t size,
                           const upb_extreg *extreg, int options,
                           upb_arena *arena) {
  envoy_service_discovery_v2_HealthCheckSpecifier *ret = envoy_service_discovery_v2_HealthCheckSpecifier_new(arena);
  if (!ret) return NULL;
  if (!_upb_decode(buf, size, ret, &envoy_service_discovery_v2_HealthCheckSpecifier_msginit, extreg, options, arena)) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char *envoy_service_discovery_v2_HealthCheckSpecifier_serialize(const envoy_service_discovery_v2_HealthCheckSpecifier *msg, upb_arena *arena, size_t *len) {
  return upb_encode(msg, &envoy_service_discovery_v2_HealthCheckSpecifier_msginit, arena, len);
}

UPB_INLINE bool envoy_service_discovery_v2_HealthCheckSpecifier_has_cluster_health_checks(const envoy_service_discovery_v2_HealthCheckSpecifier *msg) { return _upb_has_submsg_nohasbit(msg, UPB_SIZE(8, 16)); }
UPB_INLINE const envoy_service_discovery_v2_ClusterHealthCheck* const* envoy_service_discovery_v2_HealthCheckSpecifier_cluster_health_checks(const envoy_service_discovery_v2_HealthCheckSpecifier *msg, size_t *len) { return (const envoy_service_discovery_v2_ClusterHealthCheck* const*)_upb_array_accessor(msg, UPB_SIZE(8, 16), len); }
UPB_INLINE bool envoy_service_discovery_v2_HealthCheckSpecifier_has_interval(const envoy_service_discovery_v2_HealthCheckSpecifier *msg) { return _upb_hasbit(msg, 1); }
UPB_INLINE const struct google_protobuf_Duration* envoy_service_discovery_v2_HealthCheckSpecifier_interval(const envoy_service_discovery_v2_HealthCheckSpecifier *msg) { return *UPB_PTR_AT(msg, UPB_SIZE(4, 8), const struct google_protobuf_Duration*); }

UPB_INLINE envoy_service_discovery_v2_ClusterHealthCheck** envoy_service_discovery_v2_HealthCheckSpecifier_mutable_cluster_health_checks(envoy_service_discovery_v2_HealthCheckSpecifier *msg, size_t *len) {
  return (envoy_service_discovery_v2_ClusterHealthCheck**)_upb_array_mutable_accessor(msg, UPB_SIZE(8, 16), len);
}
UPB_INLINE envoy_service_discovery_v2_ClusterHealthCheck** envoy_service_discovery_v2_HealthCheckSpecifier_resize_cluster_health_checks(envoy_service_discovery_v2_HealthCheckSpecifier *msg, size_t len, upb_arena *arena) {
  return (envoy_service_discovery_v2_ClusterHealthCheck**)_upb_array_resize_accessor2(msg, UPB_SIZE(8, 16), len, UPB_SIZE(2, 3), arena);
}
UPB_INLINE struct envoy_service_discovery_v2_ClusterHealthCheck* envoy_service_discovery_v2_HealthCheckSpecifier_add_cluster_health_checks(envoy_service_discovery_v2_HealthCheckSpecifier *msg, upb_arena *arena) {
  struct envoy_service_discovery_v2_ClusterHealthCheck* sub = (struct envoy_service_discovery_v2_ClusterHealthCheck*)_upb_msg_new(&envoy_service_discovery_v2_ClusterHealthCheck_msginit, arena);
  bool ok = _upb_array_append_accessor2(
      msg, UPB_SIZE(8, 16), UPB_SIZE(2, 3), &sub, arena);
  if (!ok) return NULL;
  return sub;
}
UPB_INLINE void envoy_service_discovery_v2_HealthCheckSpecifier_set_interval(envoy_service_discovery_v2_HealthCheckSpecifier *msg, struct google_protobuf_Duration* value) {
  _upb_sethas(msg, 1);
  *UPB_PTR_AT(msg, UPB_SIZE(4, 8), struct google_protobuf_Duration*) = value;
}
UPB_INLINE struct google_protobuf_Duration* envoy_service_discovery_v2_HealthCheckSpecifier_mutable_interval(envoy_service_discovery_v2_HealthCheckSpecifier *msg, upb_arena *arena) {
  struct google_protobuf_Duration* sub = (struct google_protobuf_Duration*)envoy_service_discovery_v2_HealthCheckSpecifier_interval(msg);
  if (sub == NULL) {
    sub = (struct google_protobuf_Duration*)_upb_msg_new(&google_protobuf_Duration_msginit, arena);
    if (!sub) return NULL;
    envoy_service_discovery_v2_HealthCheckSpecifier_set_interval(msg, sub);
  }
  return sub;
}

extern const upb_msglayout_file envoy_service_discovery_v2_hds_proto_upb_file_layout;

#ifdef __cplusplus
}  /* extern "C" */
#endif

#include "upb/port_undef.inc"

#endif  /* ENVOY_SERVICE_DISCOVERY_V2_HDS_PROTO_UPB_H_ */
